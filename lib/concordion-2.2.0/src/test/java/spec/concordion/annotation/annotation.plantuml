@startuml

title __ANNOTATION's Class Diagram__\n

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.AnnotationFixture {
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.BeforeAndAfterLoggingFixture {
            {static} - log : List<String>
            + error()
            {static} + getLog()
            + log()
            + logAfterExample()
            + logAfterExample()
            + logBeforeExample()
            + logBeforeSpecification()
            + ok()
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.BeforeAndAfterLoggingWithListenerFixture {
            - ext1 : ExampleEventTestExtension
            - ext2 : ExampleEventTestExtension
            {static} - log : List<String>
            {static} + getLog()
            + log()
            + logAfterExample()
            + logAfterSpecification()
            + logBeforeExample()
            + logBeforeSpecification()
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.BeforeAndAfterMethodHooksFixture {
            - exampleName : String
            - exampleScopedCounter : ScopedObjectHolder<AtomicInteger>
            - fieldCounter : int
            + getExampleName()
            + getExampleScopedCounter()
            + getFieldCounter()
            + getListenerLog()
            + getLog()
            + incrementAllCounters()
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.ConcordionOptionsFixture {
            - pegdownExtensions : int
            + parse()
            + parseAndReturnExceptionMessage()
            + translate()
            + withWikilinkAndAutolink()
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.ConcordionResourcesFixture {
            - compiler : JavaSourceCompiler
            - result : ProcessingResult
            - testRig : TestRig
            + getLinkExists()
            + getResources()
            + getScriptExists()
            + isCopied()
            + isCssIncluded()
            + isDefaultCssIncluded()
            + process()
            + process()
            + processExpectingException()
            + processSpec()
            - compile()
            - compile()
            - process()
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.ConcordionScopedFixture {
            - exampleScopedCounter : ScopedObjectHolder<AtomicInteger>
            - fieldCounter : int
            - specScopedCounter : ScopedObjectHolder<AtomicInteger>
            + getExampleScopedCounter()
            + getFieldCounter()
            + getSpecScopedCounter()
            + incrementAllCounters()
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace annotation {
        class spec.concordion.annotation.ImplementationStatusFixture {
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
