@startuml

title __EXPRESSIONS's Class Diagram__\n

  namespace  {
    namespace pec.concordion {
      namespace common.command {
        namespace expressions {
          class spec.concordion.common.command.expressions.ComplexExpressionsTest {
              - ognl : Evaluator
              - simple : Evaluator
              + ComplexExpressionsTest()
              + checkExpression()
              - initTestVariables()
              - isExpressionSupportedBy()
              - toTableText()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace common.command {
        namespace expressions {
          class spec.concordion.common.command.expressions.ComplexExpressionsTest.Chain {
              + chain()
              + chainWithArg()
              + chainWithArgs()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace common.command {
        namespace expressions {
          class spec.concordion.common.command.expressions.ComplexExpressionsTest.Complex {
              + nestedProperty : String
              + nestedMethod()
              + nestedMethodWithArg()
              + nestedMethodWithArgs()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace common.command {
        namespace expressions {
          class spec.concordion.common.command.expressions.ComplexExpressionsTest.OgnlTestFixture {
          }
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace common.command {
        namespace expressions {
          class spec.concordion.common.command.expressions.ComplexExpressionsTest.SimpleTestFixture {
              + arrayProperty : String[]
              + mapProperty : Map<String, String>
              + property : String
              + method()
              + methodReturningArray()
              + methodReturningChain()
              + methodReturningComplex()
              + methodReturningMap()
              + methodWithArg()
              + methodWithArgs()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace pec.concordion {
      namespace common.command {
        namespace expressions {
          class spec.concordion.common.command.expressions.ExpressionsTest {
              + isValidEvaluationExpression()
              + isValidSetVariableExpression()
          }
        }
      }
    }
  }
  

  spec.concordion.common.command.expressions.ComplexExpressionsTest +-down- spec.concordion.common.command.expressions.ComplexExpressionsTest.Chain
  spec.concordion.common.command.expressions.ComplexExpressionsTest +-down- spec.concordion.common.command.expressions.ComplexExpressionsTest.Complex
  spec.concordion.common.command.expressions.ComplexExpressionsTest +-down- spec.concordion.common.command.expressions.ComplexExpressionsTest.OgnlTestFixture
  spec.concordion.common.command.expressions.ComplexExpressionsTest +-down- spec.concordion.common.command.expressions.ComplexExpressionsTest.SimpleTestFixture
  spec.concordion.common.command.expressions.ComplexExpressionsTest.Chain o-- spec.concordion.common.command.expressions.ComplexExpressionsTest.Complex : chain
  spec.concordion.common.command.expressions.ComplexExpressionsTest.OgnlTestFixture -up-|> spec.concordion.common.command.expressions.ComplexExpressionsTest.SimpleTestFixture
  spec.concordion.common.command.expressions.ComplexExpressionsTest.SimpleTestFixture o-- spec.concordion.common.command.expressions.ComplexExpressionsTest.Chain : chainProperty
  spec.concordion.common.command.expressions.ComplexExpressionsTest.SimpleTestFixture o-- spec.concordion.common.command.expressions.ComplexExpressionsTest.Complex : complexProperty


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
