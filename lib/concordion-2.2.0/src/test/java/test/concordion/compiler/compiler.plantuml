@startuml

title __COMPILER's Class Diagram__\n

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.CompilationFailedException {
            - diagnostics : DiagnosticMessage[]
            {static} - serialVersionUID : long
            + CompilationFailedException()
            + getDiagnosticMessages()
            + printDiagnosticsTo()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        interface test.concordion.compiler.Compiler {
            {abstract} + compile()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.CompilerNotAvailableException {
            {static} - serialVersionUID : long
            + CompilerNotAvailableException()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.DiagnosticCollector {
            - diagnosticMessages : List<DiagnosticMessage>
            - locale : Locale
            + getDiagnosticMessages()
            + report()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        interface test.concordion.compiler.DiagnosticMessage {
            {abstract} + getMessage()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.JavaCompiler {
            - charset : Charset
            - diagnosticCollector : DiagnosticCollector
            - locale : Locale
            - simulatedClassLoader : SimulatedClassLoader
            - simulatedFileManager : SimulatedFileManager
            - systemJavaCompiler : JavaCompiler
            + JavaCompiler()
            + compile()
            + forName()
            - getStandardFileManager()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.SimulatedClassLoader {
            - simulatedFileManager : SimulatedFileManager
            + SimulatedClassLoader()
            # findClass()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.SimulatedFileManager {
            - classFileMap : Map<String, SimulatedJavaClassFile>
            + SimulatedFileManager()
            + getJavaFileForOutput()
            + inferBinaryName()
            + list()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.SimulatedJavaClassFile {
            - out : ByteArrayOutputStream
            + SimulatedJavaClassFile()
            + getBytes()
            + openInputStream()
            + openOutputStream()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.SimulatedJavaSourceFile {
            - content : String
            + getCharContent()
            ~ SimulatedJavaSourceFile()
        }
      }
    }
  }
  

  namespace  {
    namespace est.concordion {
      namespace compiler {
        class test.concordion.compiler.Source {
            - content : String
            - path : URI
            + Source()
            + Source()
            + getContent()
            + getPath()
            {static} + toURI()
        }
      }
    }
  }
  

  test.concordion.compiler.DiagnosticCollector .up.|> DiagnosticListener
  test.concordion.compiler.JavaCompiler .up.|> Compiler


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
