@startuml

title __INTERNAL's Class Diagram__\n

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.BrowserStyleWhitespaceComparatorTest {
            - comparator : BrowserStyleWhitespaceComparator
            + acceptsVariousFormsOfBooleanString()
            + considersAStringRepresentationOfNullAsEqualToNull()
            + normalizesItemsBeforeComparing()
            - assertConsideredEqual()
            - assertNotConsideredEqual()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.ClassNameBasedSpecificationLocatorTest {
            + testCanAppendDotXHTMLWhenConstructedWithXHTMLArgument()
            + testRemovesWordFixtureFromEndOfClassNameAndAppendsDotHTML()
            + testRemovesWordTestFromEndOfClassNameAndAppendsDotHTML()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.ClassPathSourceTest {
            {static} - EXPECTED_SOURCE_NAME : String
            {static} - MISSING_RESOURCE_NAME : String
            - source : ClassPathSource
            + failsWithIOExceptionOnCreateInputStreamWithMissingResource()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.FixtureExtensionLoaderWithAnnotatedFieldsTest {
            - compiler : JavaSourceCompiler
            - loader : FixtureExtensionLoader
            + allowsPackageAccessibleFieldWithExtensionAnnotation()
            + allowsPrivateFieldWithExtensionAnnotation()
            + allowsProtectedFieldWithExtensionAnnotation()
            + errorsIfFieldWithExtensionAnnotationIsNotAConcordionExtension()
            + errorsIfFieldWithExtensionAnnotationIsNull()
            + ignoresFieldsWithoutExtensionAnnotation()
            + loadsPublicFieldFromSuperClassWithExtensionAnnotation()
            + loadsPublicFieldWithExtensionAnnotation()
            - classWithFieldDeclaration()
            - withFieldDeclaration()
            - withFieldDeclaration()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.FixtureExtensionLoaderWithClassAnnotationTest {
            - compiler : JavaSourceCompiler
            - loader : FixtureExtensionLoader
            + errorsIfClassIsNotExtensionOrExtensionFactory()
            + errorsIfExtensionConstructorIsNotPublic()
            + errorsIfExtensionDoesNotHaveNoArgsConstructor()
            + loadsAllExtensionsInHierarchy()
            + loadsExtensionFromFactoriesListedInClassAnnotation()
            + loadsExtensionListedInClassAnnotation()
            + onlyLoadsExtensionOnceIfParentIsAnnotated()
            - classWithAnnotation()
            - createParentWithClassAnnotation()
            - withClassAnnotation()
            - withClassAnnotationAndSuperclass()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.MultiPatternTest {
            - testingInstance : MultiPattern
            + testDoesNotMatch()
            + testMatchesFirstRegex()
            + testMatchesSecondRegex()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.SingleParameterSupplierTest {
            ~ singleParameterSupplier : SingleParameterSupplier
            + incorrectParamType()
            + parameterWithMultipleAnnotations()
            + parameterWithNoAnnotations()
            + returnsParameterWhenAnnotatedCorrectly()
            + throwsExceptionWhenParameterHasMultipleAnnotations()
            + throwsExceptionWhenParameterHasNoAnnotations()
            + throwsExceptionWhenParameterTypeIsIncorrect()
            + validMethod()
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        class org.concordion.internal.XMLSpecificationReaderTest {
            {static} - ERRONEOUS_HTML : String
            {static} - EXPECTED_SOURCE_NAME : String
            {static} - SPEC_RESOURCE_NAME : String
            - reader : XMLSpecificationReader
            - stubSource : StubSource
            + includesSourceAndResourceNameOnFailure()
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
