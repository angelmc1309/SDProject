@startuml

title __STRATEGIES's Class Diagram__\n

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace command {
          namespace strategies {
            abstract class org.concordion.internal.command.strategies.AbstractChangingOrderRowsMatchStrategy {
                + AbstractChangingOrderRowsMatchStrategy()
                + verify()
                {abstract} # findMatchingRow()
                - reportSurplusRows()
            }
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace command {
          namespace strategies {
            class org.concordion.internal.command.strategies.BestMatchStrategy {
                + BestMatchStrategy()
                # findMatchingRow()
            }
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace command {
          namespace strategies {
            class org.concordion.internal.command.strategies.DefaultMatchStrategy {
                {static} + DEFAULT_STRATEGY_NAME : String
                + DefaultMatchStrategy()
                + verify()
            }
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace command {
          namespace strategies {
            class org.concordion.internal.command.strategies.KeyMatchStrategy {
                + KeyMatchStrategy()
                # findMatchingRow()
            }
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace command {
          namespace strategies {
            abstract class org.concordion.internal.command.strategies.RowsMatchStrategy {
                # actualRows : List<Object>
                # commandCall : CommandCall
                # evaluator : Evaluator
                # expectedRows : Row[]
                # listeners : List<VerifyRowsListener>
                # loopVariableName : String
                # resultRecorder : ResultRecorder
                # tableSupport : TableSupport
                + RowsMatchStrategy()
                {abstract} + verify()
                # announceExpressionEvaluated()
                # announceMissingRow()
                # announceSurplusRow()
                # copy()
            }
          }
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
