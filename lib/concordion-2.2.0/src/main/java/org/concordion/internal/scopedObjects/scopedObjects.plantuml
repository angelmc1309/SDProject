@startuml

title __SCOPEDOBJECTS's Class Diagram__\n

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          interface org.concordion.internal.scopedObjects.ScopedField {
              {abstract} + destroy()
              {abstract} + loadValueIntoField()
              {abstract} + saveValueFromField()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          class org.concordion.internal.scopedObjects.ScopedFieldImpl {
              - field : Field
              - scopedObject : ScopedObject
              + ScopedFieldImpl()
              + destroy()
              + loadValueIntoField()
              + saveValueFromField()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          class org.concordion.internal.scopedObjects.ScopedFieldStore {
              {static} ~ DEFAULT_EXTENSION_SCOPE : Scope
              - scopedFields : Map<Scope, List<ScopedField>>
              + ScopedFieldStore()
              + destroyFields()
              + loadValuesIntoFields()
              + saveValueFromFields()
              # createScopedObject()
              # createScopedObject()
              - createScopedExtensionField()
              - createScopedExtensionField()
              - createScopedFields()
              - createScopedObjectField()
              - createScopedObjectField()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          interface org.concordion.internal.scopedObjects.ScopedObject {
              {abstract} + getObject()
              {abstract} + setObject()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          enum ScopedObjectFactory {
            SINGLETON
            repository
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          class org.concordion.internal.scopedObjects.ScopedObjectImpl {
              - fieldName : String
              - fieldScope : Scope
              - repository : ScopedObjectRepository
              - specificationClass : Class<?>
              + ScopedObjectImpl()
              + getObject()
              + setObject()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          class org.concordion.internal.scopedObjects.ScopedObjectRepository {
              - repo : Map<ScopedObjectRepositoryKey, Object>
              + ScopedObjectRepository()
              + getObject()
              + setObject()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace scopedObjects {
          class org.concordion.internal.scopedObjects.ScopedObjectRepository.ScopedObjectRepositoryKey {
              - concordionFieldScope : Scope
              - name : String
              - specificationClass : Class<?>
              + ScopedObjectRepositoryKey()
              + equals()
              {static} + hash()
              + hashCode()
          }
        }
      }
    }
  }
  

  org.concordion.internal.scopedObjects.ScopedFieldImpl .up.|> ScopedField
  org.concordion.internal.scopedObjects.ScopedObjectImpl .up.|> ScopedObject
  org.concordion.internal.scopedObjects.ScopedObjectRepository +-down- org.concordion.internal.scopedObjects.ScopedObjectRepository.ScopedObjectRepositoryKey


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
