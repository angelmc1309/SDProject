@startuml

title __MARKDOWN's Class Diagram__\n

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.ConcordionHtmlSerializer {
              {static} - SOURCE_CONCORDION_NAMESPACE_PREFIX : String
              {static} - URL_FOR_CONCORDION : String
              - currentExampleHeading : String
              - currentExampleLevel : int
              - depth : int
              - escapeHtmlNodes : boolean
              - escapeText : boolean
              - inExample : boolean
              - inHeaderNode : boolean
              - pendingCommand : ConcordionStatement
              - statementParser : ConciseExpressionParser
              + ConcordionHtmlSerializer()
              + visit()
              + visit()
              + visit()
              + visit()
              + visit()
              + visit()
              + visit()
              + visit()
              + visit()
              # printIndentedTag()
              - asLinkNode()
              - closeExample()
              - closeExampleIfNeedeed()
              - firstChildIsInstanceOf()
              - firstChildOf()
              - firstColumnOfHeaderRow()
              - generateName()
              - numberOfLinkNodeChildren()
              - printConcordionCommand()
              - printConcordionCommandElement()
              - printPendingConcordionCommand()
              - toExampleName()
              - toLinkNode()
              - toLinkNode()
              - visit()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.ConcordionMarkdownException {
              {static} - serialVersionUID : long
              + ConcordionMarkdownException()
              + ConcordionMarkdownException()
              + ConcordionMarkdownException()
              + ConcordionMarkdownException()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.LinkNode {
              - text : String
              - title : String
              - url : String
              + LinkNode()
              + getText()
              + getTitle()
              + getUrl()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.MarkdownConverter {
              {static} - CONCORDION_NAMESPACE_PREFIX : String
              - namespaces : Map<String, String>
              - pegdownExtensions : int
              + convert()
              + withNamespaceDeclarations()
              + withPegdownExtensions()
              - asString()
              - wrapBody()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.MarkdownParser {
              - namespaces : Map<String, String>
              - pegdownExtensions : int
              + MarkdownParser()
              + MarkdownParser()
              + markdownToHtml()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.RunCommandLinkRenderer {
              - concordionNamespacePrefix : String
              - runCommandToken : String
              + RunCommandLinkRenderer()
              + render()
          }
        }
      }
    }
  }
  

  namespace  {
    namespace rg.concordion {
      namespace internal {
        namespace parser.markdown {
          class org.concordion.internal.parser.markdown.XhtmlConverter {
              + convert()
          }
        }
      }
    }
  }
  

  org.concordion.internal.parser.markdown.MarkdownConverter .up.|> SpecificationConverter
  org.concordion.internal.parser.markdown.XhtmlConverter .up.|> SpecificationConverter


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
